# [주석]
/* 여러줄 주석 */
# 한줄 주석 
-- 한줄 주석 

# [명령어 실행]
# [1] ctrl+엔터 : 실행할 명령어에 커서를 두고 단위 실행 ( 번개 모양 I )
# [2] ctrl+shift : .sql 파일의 존재하는 모든 명령어 실행 ( 번개 모양 )

# [ SQL ]
/*
	[ DDL : data Definition Language ] : 데이터베이스 정의 언어 
		1. show databases;								: db server 내 모든 데이터베이스를 확인 
		2. show variables like 'datadir'				: db server local path 확인 	
		3. create database 데이터베이스명					: db server 내 db 생성 
		4. drop database 데이터베이스명						: db server 내 db 삭제 
			- drop database if exists 데이터베이스명 		: 만일 db가 존재하면 삭제 
		5. use 데이터베이스명								: db server 내 여러 db중에 사용 활성화
		6. create table 테이블명( 속성명 타입 , 속성명 타입 , 속성명 타입 ) : 활성화된 db에서 테이블/표 생성한다.
		7. drop table 테이블명							: 활성화된 db에서 테이블 삭제 
			- drop table if exists 테이블명		 		: 만일 테이블이 존재하면 삭제 
		8. show tables									: 활성화된 db내 모든 테이블 확인 
        
	[ 데이터 타입 ] : 테이블 생성시 필드/속성 의 데이터 타입 
		[정수]	TINYINT , SMALLINT , MEDIUMINT , INT , BIGINT
        [실수]	FLOAT , DOUBLE , DECIMAL(문자)
        [문자]	CHAR( ) , VARCHAR( )
        [날짜/시간] DATE , TIME , DATETIME
        [논리]	BOOL
*/
/* 
	[11/20, SQL과제] 키오스크 개발 - 필요한 데이터베이스 구축 하기 
	- 요구 사항 
		1. 여러개 카테고리 중에 하나의 카테고리를 선택하여 카테고리별 제품들을 출력
		2. 해당 제품을 선택하여 수량 입력받아 주문 처리 - 단) *한번 주문의 여러개 제품을 주문 할수 있다.*
		3. 주문번호를 받아서 대기한다.
	- 메모리 설계 필수 필드 속성 
		1. 카테고리명 2. 제품명 3.가격 4.주문수량 5.주문날짜 
	- 핵심 : 여러 테이블 구성 할때는 테이블간의 데이터 중복을 최소화 한다.
*/
# 생각순서 
# 1. 우리가 만들고자 하는 프로그램의 저장할 데이터를 생각 , 
	# 카테고리(커피,음료,주스,스무디) , 
    # 제품( 아메리카노1000 , 사과주스2000 , 메론스무디3000 , 콜라2500 , 모카치노3500 )
    # 주문( 102 아메리카노 2개 11/20 , 103 메론스무디 1개 콜라 1개 11/21 )

# 2. 데이터들을 어떻게 관리/구분/처리
	# 카페알바생 - 종이장부 
    # 손님1번째 이 아메리카노 1개 주문 했을때 , 어떻게 작성할지? 정답 없음
	# 손님2번째 이 아메리카노 1개 , 메론스무디 2개 주문 했을때 , 어떻게 작성할지? 
/*
종이장부
	주문번호	주문날짜		제품명		가격			개수	 제품구분
	102		11/20		아메리카노		1000		1	 커피
	103		11/21		아메리카노		1000		1	 커피
	103		11/21		메론스무디		3000		2	 스무디
*/ 
# 3. (정규화) 중복을 최소화 , 메모리 를 효율성있게 아껴쓸려고 
create database mydb1121;
use mydb1121;
	# 카테고리테이블( 카테고리명 )
create table 카테고리( 카테고리명 char(10) ); 
    # 제품테이블( 제품명 , 가격 )
create table 제품( 제품명 varchar(50) , 가격 int );
    # 주문테이블( 주문날짜 )
create table 주문( 주문날짜 date );
    # 주문상세테이블( 주문수량 )
create table 주문상세(  주문수량 int )

#
    



    






